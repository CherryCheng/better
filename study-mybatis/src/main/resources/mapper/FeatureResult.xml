<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.cherrycheng.study.mybatis.mapper.FeatureResultMapper">
    <sql id="Base_Column_List">
        `name`
        , cert_type, cert_no, bk_cellcertification_s, bk_black_list_i, bj_black_list_i, br_court_list_i,
         br_crime_list_i, hf_court_crime_list_i, bk_relativecorrapplydeliq_i, pbv2_stateabnormaloverduecnt_i,
         pbv2_deliqabnormaloverduecnt_i, pbv2_ba_count_i, pbv2_assdiscnt_i, pbv2_advancedcnt_i,
         pbv2_m24_lcc_maxdeqlperiods_i, pbv2_m24_lcc_maxseriesdeqlperiods_i, pbv2_m24_lcc_accdeqltimes_i,
         pbv2_corrclass5badcount_i, pbv2_m1_lco_querycnt_i, pbv2_enforcecnt_i, pbv2_civiljudgmentcnt_i,
         pbv2_nbankloanacccnt_i, pbv2_creditloanbalanceamtsum_d, pbv2_ccminrepaycnt_i, ty_riskcode26_i, ty_riskcode27_i,
         ty_riskcode28_i, ty_fraudscore_i, bj_fraudhmscore_i, fico_creditscore_i, bj_ttscore_i, bj_hyscore_i,
         ty_bcardscore_i, ty_ccardscore_i, bk_overdueday_i, age, mobile, apply_time, bk_certnovalidday_i, marry_status,
         work_company,
         income_range, contact_name1, contact_relation1, contact_mobile1, contact_remark1, contact_name2,
         contact_relation2, contact_mobile2, contact_remark2, request_ip, device_type, device_mac
, device_risk,nation,birth,id_card_address,id_card_sign_office
    </sql>


    <insert id="insert" parameterType="top.cherrycheng.study.mybatis.model.FeatureResult">
        INSERT INTO feature_result (
        <include refid="Base_Column_List"/>
        ) VALUES
        (#{name}, 1, #{certNo}, floor(rand() * 2), floor(rand() * 2), floor(rand() * 2), floor(rand() * 2),
        floor(rand() * 2), floor(rand() * 2), floor(rand() * 2), floor(1 + rand() * 10), floor(1 + rand() * 10),
        floor(1 + rand() * 10), floor(1 + rand() * 10), floor(1 + rand() * 10), floor(1 + rand() * 10),
        floor(1 + rand() * 10), floor(1 + rand() * 10), floor(1 + rand() * 10), floor(1 + rand() * 10),
        floor(1 + rand() * 10), floor(1 + rand() * 10), floor(1 + rand() * 10),
        floor(3 + (rand() * 10)) * 10000, floor(1 + rand() * 10), floor(1 + rand() * 10),
        floor(1 + rand() * 10), floor(1 + rand() * 10), floor(rand() * 100), (350 + floor(rand() * 100) * 5),
        (400 + floor(rand() * 100) * 4), (350 + floor(rand() * 100) * 5), (350 + floor(rand() * 100) * 5),
        (400 + floor(rand() * 100) * 2), (600 + floor(rand() * 100) * 2), floor((rand() * 100) / 2), #{age},
        #{mobile}, #{apply_time}, #{bk_certnovalidday_i}, #{marry_status}, #{work_company}, #{income_range},
        #{contact_name1},
        #{contact_relation1}, #{contact_mobile1}, #{contact_remark1}, #{contact_name2}, #{contact_relation2},
        #{contact_mobile2}, #{contact_remark2}, #{request_ip}, #{device_type}, #{device_mac}, #{device_risk}
        ,#{nation},#{birth},#{id_card_address},#{id_card_sign_office});
    </insert>
    <insert id="batchInsert">
        INSERT INTO feature_result (
        <include refid="Base_Column_List"/>
        ) VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.name}, 1, #{item.certNo}, floor(rand() * 2), floor(rand() * 2), floor(rand() * 2)
            , floor(rand() * 2),floor(rand() * 2), floor(rand() * 2), floor(rand() * 2), floor(1 + rand() * 10)
            , floor(1 + rand() * 10), floor(1 + rand() * 10), floor(1 + rand() * 10), floor(1 + rand() * 10)
            , floor(1 + rand() * 10),floor(1 + rand() * 10), floor(1 + rand() * 10), floor(1 + rand() * 10)
            , floor(1 + rand() * 10),floor(1 + rand() * 10), floor(1 + rand() * 10), floor(1 + rand() * 10),
            floor(3 + (rand() * 10)) * 10000, floor(1 + rand() * 10), floor(1 + rand() * 10),
            floor(1 + rand() * 10), floor(1 + rand() * 10), floor(rand() * 100), (350 + floor(rand() * 100) * 5),
            (400 + floor(rand() * 100) * 4), (350 + floor(rand() * 100) * 5), (350 + floor(rand() * 100) * 5),
            (400 + floor(rand() * 100) * 2), (600 + floor(rand() * 100) * 2), floor((rand() * 100) / 2), #{item.age},
            #{item.mobile}, #{item.apply_time}, #{item.bk_certnovalidday_i}, #{item.marry_status}
            , #{item.work_company}, #{item.income_range}, #{item.contact_name1},#{item.contact_relation1}
            , #{item.contact_mobile1}, #{item.contact_remark1}, #{item.contact_name2}, #{item.contact_relation2}
            ,#{item.contact_mobile2}, #{item.contact_remark2}, #{item.request_ip}, #{item.device_type}
            , #{item.device_mac}, #{item.device_risk},#{item.nation},#{item.birth},#{item.id_card_address}
            ,#{item.id_card_sign_office})
        </foreach>
    </insert>
    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="list" item="item" separator=";">
            update feature_result
            set `name`=#{item.name},
            cert_no=#{item.certNo},
            age=#{item.age},
            mobile=#{item.mobile},
            apply_time=#{item.apply_time},
            bk_certnovalidday_i=#{item.bk_certnovalidday_i},
            marry_status=#{item.marry_status},
            work_company=#{item.work_company},
            income_range=#{item.income_range},
            contact_name1=#{item.contact_name1},
            contact_relation1=#{item.contact_relation1},
            contact_mobile1=#{item.contact_mobile1},
            contact_remark1=#{item.contact_remark1},
            contact_name2=#{item.contact_name2},
            contact_relation2=#{item.contact_relation2},
            contact_mobile2=#{item.contact_mobile2},
            contact_remark2=#{item.contact_remark2},
            request_ip=#{item.request_ip},
            device_type=#{item.device_type},
            device_mac=#{item.device_mac},
            device_risk=#{item.device_risk}
            ,nation=#{item.nation},birth=#{item.birth},id_card_address=#{item.id_card_address}
            ,id_card_sign_office=#{item.id_card_sign_office}
            where id = #{item.id}
        </foreach>
    </update>

    <select id="update" resultType="top.cherrycheng.study.mybatis.model.FeatureResult">
        update feature_result
        set `name`=#{name},
            cert_no=#{certNo},
            age=#{age},
            mobile=#{mobile},
            apply_time=#{apply_time},
            bk_certnovalidday_i=#{bk_certnovalidday_i},
            marry_status=#{marry_status},
            work_company=#{work_company},
            income_range=#{income_range},
            contact_name1=#{contact_name1},
            contact_relation1=#{contact_relation1},
            contact_mobile1=#{contact_mobile1},
            contact_remark1=#{contact_remark1},
            contact_name2=#{contact_name2},
            contact_relation2=#{contact_relation2},
            contact_mobile2=#{contact_mobile2},
            contact_remark2=#{contact_remark2},
            request_ip=#{request_ip},
            device_type=#{device_type},
            device_mac=#{device_mac},
            device_risk=#{device_risk},
            nation=#{nation},
            birth=#{birth},
            id_card_address=#{id_card_address}
                ,
            id_card_sign_office=#{id_card_sign_office}
        where id = #{id}
    </select>
    <insert id="insertByDefault" parameterType="top.cherrycheng.study.mybatis.model.FeatureResult" keyProperty="">
        INSERT INTO feature_result
        (`name`, cert_no, age, mobile, apply_time, bk_certnovalidday_i, marry_status, work_company, income_range,
         contact_name1,
         contact_relation1, contact_mobile1, contact_remark1, contact_name2, contact_relation2, contact_mobile2,
         contact_remark2, request_ip, device_type, device_mac, device_risk)
        VALUES (#{name}, #{certNo}, #{age}, #{mobile}, #{apply_time}, #{bk_certnovalidday_i}, #{marry_status},
                #{work_company}, #{income_range},
                #{contact_name1}, #{contact_relation1}, #{contact_mobile1}, #{contact_remark1}, #{contact_name2},
                #{contact_relation2}, #{contact_mobile2}, #{contact_remark2}, #{request_ip}, #{device_type},
                #{device_mac}, #{device_risk}, #{nation}, #{birth}, #{id_card_address}, #{id_card_sign_office});
    </insert>
    <select id="getAllIds" resultType="java.lang.Long">
        -- 身份证为空的前十条
        select id
        from feature_result
        where bk_certnovalidday_i is null
        order by id desc limit 100;
    </select>
</mapper>