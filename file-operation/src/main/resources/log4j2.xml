<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="debug">
    <!-- 定义日志存放目录 -->
    <properties>
        <Property name="baseDir">/data/better/logs/fileoperation</Property>
        <property name="PATTERN">%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %F(%L) -%m%n</property>
    </properties>
    <!--先定义所有的appender(输出器) -->
    <appenders>
        <!--输出到控制台 -->
        <Console name="ConsoleLog" target="SYSTEM_OUT">
            <!--只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
            <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
            <!--输出日志的格式，引用自定义模板 PATTERN -->
            <PatternLayout pattern="${PATTERN}"/>
        </Console>
        <!--输出到循环日志，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
        <RollingFile name="RollingFileLog" fileName="${baseDir}/root.log"
                     filePattern="${baseDir}/$${date:yyyy-MM}/batchserver-%d{yyyy-MM-dd}-%i.log.gz">
            <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy modulate="true" interval="1"/>
                <SizeBasedTriggeringPolicy size="500MB"/>
            </Policies>

            <!--
                下面是一个示例配置，它使用一个RollingFileAppender和基于时间和大小的触发策略，
                将在同一天（1-100）创建多达100个存档，这些存档存储在基于当前年份和月份的目录中，
                并将使用gzip压缩每个存档，并将每小时滚动一次。在每次滚动期间，
                此配置将删除与“*/app-*.log.gz”匹配且30天或30天以上的文件，但保留最新的100 GB或最新的10个文件，
                以先到者为准。
            -->
            <DefaultRolloverStrategy max="100">
                <Delete basePath="${baseDir}" maxDepth="2">
                    <IfFileName glob="*/fileoperation-*.log.gz">
                        <IfLastModified age="30d">
                            <IfAny>
                                <IfAccumulatedFileSize exceeds="100 GB"/>
                                <IfAccumulatedFileCount exceeds="10"/>
                            </IfAny>
                        </IfLastModified>
                    </IfFileName>
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>
    </appenders>
    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效 -->
    <Loggers>
        <!-- 生产环境level>=warn -->
        <Root level="debug">
            <!-- 输出器,可选上面定义的任何项组合，或全选，做到可随意定制 -->
            <appender-ref ref="ConsoleLog"/>
            <!--<appender-ref ref="FileLog" />-->
            <!--            <appender-ref ref="RollingFileLog"/>-->
        </Root>
        <!-- 第三方日志系统 -->
        <!--过滤掉spring和mybatis的一些无用的DEBUG信息，也可以在spring boot 的logging.level.org.springframework=FATAL设置-->
        <logger name="org.springframework" level="debug"/>
        <logger name="org.mybatis" level="debug"/>
        <logger name="org.apache" level="debug"/>
        <logger name="org.eclipse" level="debug"/>
        <logger name="org.hibernate" level="debug"/>
        <logger name="RocketmqClient" level="debug"/>
        <logger name="RocketmqCommon" level="debug"/>
        <logger name="RocketmqRemoting" level="debug"/>
        <logger name="com.xxl" level="debug"/>
        <logger name="com.amazonaws" level="debug"/>
        <logger name="com.ctrip.framework" level="debug"/>
    </Loggers>
</Configuration>